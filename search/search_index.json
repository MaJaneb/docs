{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"lab1/","title":"lab1\u00bb","text":"<p>\u041f\u0440\u043e\u0435\u043a\u0442 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u043d\u0430 FastAPI \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c SQLModel, JWT-\u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0438 Alembic \u0434\u043b\u044f \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439. \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438: \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438, \u043a\u043d\u0438\u0433\u0438, \u0436\u0430\u043d\u0440\u044b \u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 \u043e\u0431\u043c\u0435\u043d.</p>"},{"location":"lab1/#_1","title":"\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f","text":"<p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f OAuth2 Password Flow (Bearer Token). \u0422\u043e\u043a\u0435\u043d \u0441\u043e\u0437\u0434\u0430\u0451\u0442\u0441\u044f \u043f\u0440\u0438 \u043b\u043e\u0433\u0438\u043d\u0435 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f \u0432 \u0437\u0430\u0449\u0438\u0449\u0451\u043d\u043d\u044b\u0445 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430\u0445.</p> <p>\u0425\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f: get_password_hash \u2014 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u0445\u0435\u0448\u0430 \u043f\u0430\u0440\u043e\u043b\u044f \u0447\u0435\u0440\u0435\u0437 bcrypt.</p> <p>\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u0430\u0440\u043e\u043b\u044f: verify_password \u2014 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0432\u0432\u0435\u0434\u0451\u043d\u043d\u043e\u0433\u043e \u043f\u0430\u0440\u043e\u043b\u044f \u0441 \u0445\u0435\u0448\u0435\u043c.</p> <p>\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f JWT: create_access_token \u2014 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u043e\u043a\u0435\u043d\u0430 \u0441 \u043f\u043e\u043b\u0435\u043c sub \u0438 \u0441\u0440\u043e\u043a\u043e\u043c \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f.</p> <p>\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f: get_current_user \u2014 \u0434\u0435\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u043e\u043a\u0435\u043d\u0430 \u0438 \u043f\u043e\u0438\u0441\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e email.</p> <pre><code>from fastapi.security import OAuth2PasswordBearer\nfrom jose import jwt\n\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/user/login\")\n\ndef get_current_user(token: str = Depends(oauth2_scheme)) -&gt; User:\n    payload = jwt.decode(token, settings.SECRET_KEY, algorithms=[settings.ALGORITHM])\n    email = payload.get(\"sub\")\n    # ... \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u0437 \u0411\u0414 ...\n</code></pre>"},{"location":"lab1/#_2","title":"\u041c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 (\u043a\u0440\u0430\u0442\u043a\u043e)","text":"<ul> <li> <p>User: id, username, email, hashed_password, created_at; \u0441\u0432\u044f\u0437\u0438 \u0441 \u043a\u043d\u0438\u0433\u0430\u043c\u0438 \u0438 \u043e\u0431\u043c\u0435\u043d\u0430\u043c\u0438.</p> </li> <li> <p>Book: id, user_id, title, author, description, status (\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u0430/\u041e\u0431\u043c\u0435\u043d\u0435\u043d\u0430), created_at; \u0441\u0432\u044f\u0437\u0438 \u0441 \u0436\u0430\u043d\u0440\u0430\u043c\u0438.</p> </li> <li> <p>Genre: id, name; \u043c\u043d\u043e\u0433\u0438\u0435-\u043a\u043e-\u043c\u043d\u043e\u0433\u0438\u043c \u0441 Book \u0447\u0435\u0440\u0435\u0437 BookGenre.</p> </li> <li> <p>ExchangeRequest: id, sender_id, receiver_id, sender_book_id, requested_book_id, status (\u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0435\u0442\u0441\u044f/\u041f\u0440\u0438\u043d\u044f\u0442\u043e/\u041e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u043e/\u0417\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u043e), created_at.</p> </li> </ul>"},{"location":"lab1/#_3","title":"\u042d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b","text":""},{"location":"lab1/#user","title":"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 (/user)","text":"<p>POST /register \u2014 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f. \u0422\u0435\u043b\u043e: username, email, password. \u041e\u0442\u0432\u0435\u0442: UserRead.</p> <p>POST /login \u2014 \u0432\u0445\u043e\u0434 (OAuth2PasswordRequestForm: username=email, password). \u041e\u0442\u0432\u0435\u0442: Token \u0441 access_token.</p> <p>GET /users_get \u2014 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 (Bearer). \u041e\u0442\u0432\u0435\u0442: List[UserRead].</p> <p>GET /user_get_{user_id} \u2014 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e id (Bearer). \u041e\u0442\u0432\u0435\u0442: UserRead.</p> <p>PATCH /user_update_{user_id} \u2014 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c username/email (Bearer). \u0422\u0435\u043b\u043e: UserUpdate. \u041e\u0442\u0432\u0435\u0442: UserRead.</p> <p>DELETE /delete_{user_id} \u2014 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f (Bearer). \u041e\u0442\u0432\u0435\u0442: { \"ok\": true }.</p>"},{"location":"lab1/#book","title":"\u041a\u043d\u0438\u0433\u0438 (/book)","text":"<p>POST /book_create \u2014 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u043d\u0438\u0433\u0443. \u0422\u0435\u043b\u043e: BookCreate (title, author, description, status, genre_ids?). \u041e\u0442\u0432\u0435\u0442: BookResponse (\u0432\u043a\u043b\u044e\u0447\u0430\u044f genres).</p> <p>PATCH /book_patch/{book_id} \u2014 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043a\u043d\u0438\u0433\u0443, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0437\u0430\u043c\u0435\u043d\u0443 \u0436\u0430\u043d\u0440\u043e\u0432. \u0422\u0435\u043b\u043e: BookUpdate. \u041e\u0442\u0432\u0435\u0442: BookResponse.</p> <p>GET /books_get \u2014 \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043d\u0438\u0433 \u0441 \u0436\u0430\u043d\u0440\u0430\u043c\u0438. \u041e\u0442\u0432\u0435\u0442: List[BookResponse].</p> <p>GET /book_get/{book_id} \u2014 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u043d\u0438\u0433\u0443 \u043f\u043e id. \u041e\u0442\u0432\u0435\u0442: BookResponse.</p> <p>DELETE /book_delete/{book_id} \u2014 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u043a\u043d\u0438\u0433\u0443. \u041e\u0442\u0432\u0435\u0442: { \"ok\": true }.</p>"},{"location":"lab1/#genre","title":"\u0416\u0430\u043d\u0440\u044b (/genre)","text":"<p>GET /genres_get \u2014 \u0441\u043f\u0438\u0441\u043e\u043a \u0436\u0430\u043d\u0440\u043e\u0432. \u041e\u0442\u0432\u0435\u0442: List[GenreResponse].</p> <p>POST /genre_post \u2014 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0436\u0430\u043d\u0440. \u0422\u0435\u043b\u043e: GenreCreateAndUpdate. \u041e\u0442\u0432\u0435\u0442: GenreResponse.</p> <p>PATCH /genre_patch{genre_id} \u2014 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0436\u0430\u043d\u0440. \u0422\u0435\u043b\u043e: GenreCreateAndUpdate. \u041e\u0442\u0432\u0435\u0442: GenreResponse.</p> <p>GET /genre_get{genre_id} \u2014 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0436\u0430\u043d\u0440. \u041e\u0442\u0432\u0435\u0442: GenreResponse.</p> <p>DELETE /genre_delete_{genre_id} \u2014 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0436\u0430\u043d\u0440. \u041e\u0442\u0432\u0435\u0442: { \"ok\": true }.</p>"},{"location":"lab1/#exchange_request","title":"\u0417\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 \u043e\u0431\u043c\u0435\u043d (/exchange_request)","text":"<p>POST /exchange_request_post \u2014 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043e\u0431\u043c\u0435\u043d. \u0422\u0435\u043b\u043e: ExchangeRequestCreate. \u041e\u0442\u0432\u0435\u0442: ExchangeRequestResponse.</p> <p>PATCH /exchange_request_post{exchange_request_id} \u2014 \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. \u0422\u0435\u043b\u043e: ExchangeRequestUpdateStatus. \u041e\u0442\u0432\u0435\u0442: ExchangeRequestResponse.</p> <p>GET /exchange_requests_get \u2014 \u0441\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432. \u041e\u0442\u0432\u0435\u0442: List[ExchangeRequestResponse].</p> <p>GET /exchange_request_get{exchange_request_id} \u2014 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0434\u0438\u043d \u0437\u0430\u043f\u0440\u043e\u0441. \u041e\u0442\u0432\u0435\u0442: ExchangeRequestResponse.</p> <p>DELETE /exchange_request_delete{exchange_request_id} \u2014 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441. \u041e\u0442\u0432\u0435\u0442: { \"ok\": true }.</p>"},{"location":"lab1/#exchange","title":"\u041e\u0431\u043c\u0435\u043d\u044b (/exchange)","text":"<p>\u0417\u0430\u0433\u043b\u0443\u0448\u043a\u0438 (\u043f\u043b\u0430\u043d\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f):</p> <p>GET /exchange_get \u2014 \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0431\u043c\u0435\u043d\u043e\u0432.</p> <p>POST /exchange_create \u2014 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0431\u043c\u0435\u043d\u0430.</p>"},{"location":"lab1/#_4","title":"\u0421\u0445\u0435\u043c\u044b (\u0432\u044b\u0434\u0435\u0440\u0436\u043a\u0438)","text":"<pre><code>class BookCreate(BaseModel):\n    title: str\n    author: str\n    description: str\n    status: Status = Status.available\n    genre_ids: Optional[List[int]] = None\n\nclass ExchangeRequestCreate(BaseModel):\n    sender_id: int\n    receiver_id: int\n    sender_book_id: int\n    requested_book_id: int\n    status: StatusExchange\n</code></pre>"},{"location":"lab1/#_5","title":"\u0417\u0430\u043f\u0443\u0441\u043a \u0438 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438","text":"<p>\u2014 \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u0442\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f (\u0441\u0435\u043a\u0440\u0435\u0442 JWT, \u0411\u0414) \u0432 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438.</p> <p>\u2014 \u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u0435 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 Alembic (alembic upgrade head).</p> <p>\u2014 \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 (uvicorn main:app --reload).</p>"},{"location":"lab1/#alembic","title":"Alembic","text":"<p>Alembic \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u0445\u0435\u043c\u044b \u0411\u0414: \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435, \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435, \u043e\u0442\u043a\u0430\u0442 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439.</p>"},{"location":"lab2/","title":"lab2","text":"<p>\u0412 \u044d\u0442\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u044f \u0441\u0440\u0430\u0432\u043d\u0438\u043b \u0442\u0440\u0438 \u043f\u043e\u0434\u0445\u043e\u0434\u0430 \u043a \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044e \u0441\u0443\u043c\u043c\u044b \u0447\u0438\u0441\u0435\u043b \u043e\u0442 1 \u0434\u043e 1_000_000_000, \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0432 \u0438\u0445 \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u0430\u0445 \u0432 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0435 <code>lab2/task1</code>:</p> <ol> <li>\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 (<code>asyncio</code>)</li> <li>\u041c\u043d\u043e\u0433\u043e\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 (<code>multiprocessing</code>)</li> <li>\u041c\u043d\u043e\u0433\u043e\u043f\u043e\u0442\u043e\u0447\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 (<code>threading</code>)</li> </ol>"},{"location":"lab2/#1","title":"1. \u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434","text":"<pre><code>import asyncio\nimport time\n\nasync def partial_sum(start, end):\n    return sum(range(start, end))\n\nasync def main():\n    n = 1_000_000_000\n    num_tasks = 10\n    chunk_size = n // num_tasks\n\n    start_time = time.time()\n\n    tasks = []\n    for i in range(0, n, chunk_size):\n        start = i + 1\n        end = min(i + chunk_size, n) + 1\n        tasks.append(partial_sum(start, end))\n\n    results = await asyncio.gather(*tasks)\n    total = sum(results)\n\n    end_time = time.time()\n    print(f\"\u0421\u0443\u043c\u043c\u0430: {total}, \u0432\u0440\u0435\u043c\u044f: {end_time - start_time:.2f} \u0441\u0435\u043a\")\n\nasyncio.run(main())\n</code></pre> <p>\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438:</p> <p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u043a\u043e\u0440\u0443\u0442\u0438\u043d\u044b <code>asyncio</code> \u0438 10 \u0437\u0430\u0434\u0430\u0447, \u043a\u0430\u0436\u0434\u0430\u044f \u0441\u0447\u0438\u0442\u0430\u0435\u0442 \u0447\u0430\u0441\u0442\u044c \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430.</p> <p>\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0441\u0442\u044c \u043d\u0435 \u0443\u0441\u043a\u043e\u0440\u044f\u0435\u0442 CPU-bound \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f, \u0442\u0430\u043a \u043a\u0430\u043a \u043d\u0435\u0442 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u0439 I/O.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 CPU; \u0443\u0441\u043a\u043e\u0440\u0435\u043d\u0438\u044f \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043e\u0434\u043d\u043e\u043f\u043e\u0442\u043e\u0447\u043d\u043e\u0433\u043e \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430 \u043d\u0435\u0442.</p>"},{"location":"lab2/#2","title":"2. \u041c\u043d\u043e\u0433\u043e\u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434","text":"<pre><code>import multiprocessing\nimport os\nimport time\n\n\ndef partial_sum(start, end, res_queue):\n    total = sum(range(start, end))\n    res_queue.put(total)\n\n\ndef main():\n    n = 1_000_000_000\n    num_processes = 4\n    chunk_size = n // num_processes\n\n    res_queue = multiprocessing.Queue()\n    processes = []\n\n    start_time = time.time()\n\n    for i in range(num_processes):\n        start = i * chunk_size + 1\n        if i == num_processes - 1:\n            end = n + 1\n        else:\n            end = start + chunk_size\n\n        p = multiprocessing.Process(\n            target=partial_sum,\n            args=(start, end, res_queue)\n        )\n        processes.append(p)\n        p.start()\n\n    for p in processes:\n        p.join()\n\n    results = []\n    while not res_queue.empty():\n        results.append(res_queue.get())\n\n    total = sum(results)\n    end_time = time.time()\n\n    print(f\"\u0421\u0443\u043c\u043c\u0430: {total}, \u0432\u0440\u0435\u043c\u044f: {end_time - start_time:.2f} \u0441\u0435\u043a\")\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438:</p> <p>\u0414\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u0434\u0435\u043b\u0438\u0442\u0441\u044f \u043d\u0430 4 \u0447\u0430\u0441\u0442\u0438, \u043a\u0430\u0436\u0434\u0430\u044f \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435.</p> <p>\u041c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043d\u0430 CPU-bound \u0437\u0430\u0434\u0430\u0447\u0430\u0445 \u0437\u0430 \u0441\u0447\u0451\u0442 \u043e\u0431\u0445\u043e\u0434\u0430 GIL.</p> <p>\u041e\u0431\u044b\u0447\u043d\u043e \u0441\u0430\u043c\u044b\u0439 \u0431\u044b\u0441\u0442\u0440\u044b\u0439 \u0438\u0437 \u0442\u0440\u0451\u0445 \u043f\u043e\u0434\u0445\u043e\u0434\u043e\u0432 \u043d\u0430 \u043c\u043d\u043e\u0433\u043e\u044f\u0434\u0435\u0440\u043d\u044b\u0445 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u0445.</p>"},{"location":"lab2/#3","title":"3. \u041c\u043d\u043e\u0433\u043e\u043f\u043e\u0442\u043e\u0447\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434","text":"<pre><code>import threading\nimport time\n\ndef partial_sum(start, end, res, lock):\n    total = sum(range(start, end))\n    with lock:\n        res.append(total)\n\ndef main():\n    n = 1_000_000_000\n    num_threads = 4\n    chunk_size = n // num_threads\n\n    results = []\n    lock = threading.Lock()\n    threads = []\n\n    start_time = time.time()\n\n\n    for i in range(0, n, chunk_size):\n        start = i + 1\n        end = min(i + chunk_size, n) + 1\n\n        t = threading.Thread(\n            target=partial_sum,\n            args=(start, end, results, lock))\n        threads.append(t)\n        t.start()\n\n    for t in threads:\n        t.join()\n\n    total = sum(results)\n    end_time = time.time()\n\n    print(f\"\u0421\u0443\u043c\u043c\u0430: {total}, \u0432\u0440\u0435\u043c\u044f: {end_time - start_time:.2f} \u0441\u0435\u043a\")\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438:</p> <p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f 4 \u043f\u043e\u0442\u043e\u043a\u0430 \u0432 \u043e\u0434\u043d\u043e\u043c \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435, \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0437\u0430\u0449\u0438\u0449\u0430\u044e\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 <code>Lock</code>.</p> <p>\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f I/O-bound \u0437\u0430\u0434\u0430\u0447; \u043d\u0430 CPU-bound \u0432\u044b\u0438\u0433\u0440\u044b\u0448\u0430 \u043e\u0431\u044b\u0447\u043d\u043e \u043d\u0435\u0442 \u0438\u0437-\u0437\u0430 GIL.</p> <p>\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u043e\u0445\u043e\u0436\u0435 \u043d\u0430 \u043e\u0434\u043d\u043e\u043f\u043e\u0442\u043e\u0447\u043d\u043e\u0435, \u0438\u043d\u043e\u0433\u0434\u0430 \u0447\u0443\u0442\u044c \u0445\u0443\u0436\u0435 \u0438\u0437-\u0437\u0430 \u043d\u0430\u043a\u043b\u0430\u0434\u043d\u044b\u0445 \u0440\u0430\u0441\u0445\u043e\u0434\u043e\u0432.</p>"},{"location":"lab2/#_1","title":"\u0412\u044b\u0432\u043e\u0434\u044b","text":"<p>\u0414\u043b\u044f CPU-bound \u0437\u0430\u0434\u0430\u0447 \u0432 \u044d\u0442\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u0435\u0435 \u0432\u0441\u0435\u0433\u043e \u043f\u043e\u043a\u0430\u0437\u0430\u043b \u0441\u0435\u0431\u044f <code>multiprocessing</code> (4 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430). <code>asyncio</code> \u0438 <code>threading</code> \u043d\u0435 \u0434\u0430\u044e\u0442 \u0443\u0441\u043a\u043e\u0440\u0435\u043d\u0438\u044f \u043d\u0430 \u0447\u0438\u0441\u0442\u043e \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0435.</p> <p>\u0412\u043e \u0432\u0441\u0435\u0445 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f\u0445 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u043e\u0434\u0438\u043d \u0438 \u0442\u043e\u0442 \u0436\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0441\u0443\u043c\u043c\u044b \u0434\u043b\u044f \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 1..1_000_000_000: 500000000500000000</p>"},{"location":"lab3/","title":"lab3","text":"<p>\u041f\u0440\u043e\u0435\u043a\u0442 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432, \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u0445 \u0447\u0435\u0440\u0435\u0437 Docker Compose:</p>"},{"location":"lab3/#_1","title":"\u0421\u0435\u0440\u0432\u0438\u0441\u044b","text":"<ul> <li>db \u2013 PostgreSQL \u0431\u0430\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445.</li> <li>redis \u2013 \u0431\u0440\u043e\u043a\u0435\u0440 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0434\u043b\u044f Celery.</li> <li>parser \u2013 \u0441\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 HTML \u0441\u0442\u0440\u0430\u043d\u0438\u0446.</li> <li>web-app \u2013 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 FastAPI-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435.</li> <li>celery_worker \u2013 \u0432\u043e\u0440\u043a\u0435\u0440 Celery \u0434\u043b\u044f \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0437\u0430\u0434\u0430\u0447.</li> </ul>"},{"location":"lab3/#celery","title":"Celery \u0437\u0430\u0434\u0430\u0447\u0438","text":""},{"location":"lab3/#1-parse_url_tasks","title":"1. <code>parse_url_tasks</code>","text":"<ul> <li>\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e \u043f\u0430\u0440\u0441\u0438\u0442 \u043e\u0434\u043d\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443.</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 <code>httpx.AsyncClient</code> \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 HTML.</li> <li>\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 HTML \u043d\u0430 \u0441\u0435\u0440\u0432\u0438\u0441 <code>parser</code> \u0434\u043b\u044f \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445.</li> </ul>"},{"location":"lab3/#2-parse_all_urls","title":"2. <code>parse_all_urls</code>","text":"<ul> <li>\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a URL \u0438\u0437 <code>urls</code>.</li> <li>\u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442 <code>_parse_url</code> \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e URL \u0438 \u0441\u043e\u0431\u0438\u0440\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b.</li> </ul>"},{"location":"lab3/#fastapi","title":"FastAPI \u0440\u043e\u0443\u0442\u044b","text":""},{"location":"lab3/#post-parse-url","title":"<code>POST /parse-url</code>","text":"<ul> <li>\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440: <code>url</code> </li> <li>\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u0437\u0430\u0434\u0430\u0447\u0443 Celery <code>parse_url_tasks</code>.</li> <li>\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 <code>task_id</code>.</li> </ul>"},{"location":"lab3/#post-parse-all","title":"<code>POST /parse-all</code>","text":"<ul> <li>\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u0437\u0430\u0434\u0430\u0447\u0443 Celery <code>parse_all_urls</code>.</li> <li>\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 <code>task_id</code>.</li> </ul>"},{"location":"lab3/#get-task-statustask_id","title":"<code>GET /task-status/{task_id}</code>","text":"<ul> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u0442\u0430\u0442\u0443\u0441 \u0437\u0430\u0434\u0430\u0447\u0438 Celery \u043f\u043e <code>task_id</code>.</li> <li>\u0415\u0441\u043b\u0438 \u0433\u043e\u0442\u043e\u0432\u043e \u2014 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 <code>status: completed</code> \u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.</li> <li>\u0415\u0441\u043b\u0438 \u0435\u0449\u0451 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u2014 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 <code>status: pending</code>.</li> </ul>"},{"location":"lab3/#_2","title":"\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0441\u0442\u044c \u0447\u0435\u0440\u0435\u0437 <code>asyncio</code> \u0438 <code>httpx</code>.</li> <li>Celery \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 Redis \u043a\u0430\u043a \u0431\u0440\u043e\u043a\u0435\u0440 \u0438 backend.</li> <li>\u041f\u0430\u0440\u0441\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c \u0441\u0435\u0440\u0432\u0438\u0441\u0435, \u0447\u0442\u043e\u0431\u044b \u0440\u0430\u0437\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 API.</li> </ul>"}]}